name: Deploy to Server

on:
  push:
    branches:
      - main  # or your default branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "EACHLABS_API_KEY=${{ secrets.EACHLABS_API_KEY }}" > .env
        echo "IMGBB_API_KEY=${{ secrets.IMGBB_API_KEY }}" >> .env

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: 162.55.51.97
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          echo "Starting deployment..."
          
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $USER
          fi
          
          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Create app directory if it doesn't exist
          mkdir -p ~/clothai
          cd ~/clothai
          
          # Create logs directory
          mkdir -p logs
          
          # Clean old files except .env and logs
          find . -mindepth 1 -maxdepth 1 ! -name '.env' ! -name 'logs' -exec rm -rf {} +
          
          # Download repository files
          echo "Downloading repository..."
          git clone https://github.com/${{ github.repository }}.git temp
          cp -r temp/* .
          rm -rf temp
          
          # Create .env file
          echo "Creating .env file..."
          echo "EACHLABS_API_KEY=${{ secrets.EACHLABS_API_KEY }}" > .env
          echo "IMGBB_API_KEY=${{ secrets.IMGBB_API_KEY }}" >> .env
          
          # Build and start Docker containers
          echo "Building and starting Docker containers..."
          docker-compose down || true
          docker-compose build --no-cache
          docker-compose up -d
          
          # Wait for the application to start
          echo "Waiting for application to start..."
          sleep 10
          
          # Check if container is running
          if [ "$(docker ps -q -f name=clothai)" ]; then
            echo "Container is running"
            
            # Test the endpoint
            if curl -f http://localhost:8000/docs; then
              echo "Application is responding"
              echo "Deployment completed successfully!"
            else
              echo "Application is not responding"
              docker-compose logs
              exit 1
            fi
          else
            echo "Container failed to start"
            docker-compose logs
            exit 1
          fi
